version: "3.8"

services:
  # Files storage
  database:
    image: sfcs/database:v1.production
    restart: unless-stopped
    volumes:
      - ${DOCKER_IMAGES}:/data/images

  # Server for REST API and SOCKET.IO
  server-api:
    image: sfcs/server-api:v1.production
    restart: unless-stopped
    volumes:
      - ${DOCKER_IMAGES}:/app/images
    environment:
      - HOST=${HOST}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - PORT=${SERVER_API_PORT}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - IMAGES_DIRECTORY=/app/images
      - PAYMENT_HOST=http://server-payment:${SERVER_PAYMENT_PORT}/
    ports:
      - "${PUBLIC_SERVER_API_PORT}:${SERVER_API_PORT}"
    depends_on:
      - database
          
  # Server for MOMO Service Fake
  server-payment:
    image: sfcs/server-payment:v1.production
    restart: unless-stopped
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - PORT=${SERVER_PAYMENT_PORT}
      - API_HOST=http://server-api:${SERVER_API_PORT}/
    ports:
      - "${PUBLIC_SERVER_PAYMENT_PORT}:${SERVER_PAYMENT_PORT}"
    depends_on:
      - database

  # Client web for customer
  client-web:
    image: sfcs/client-web:v1.production
    restart: unless-stopped
    volumes:
      - ${DOCKER_IMAGES}:/data/images
    environment:
      - VUE_APP_DOMAIN=${HOST}
    ports:
      - "80:80"
    depends_on:
      - server-api
      - server-payment